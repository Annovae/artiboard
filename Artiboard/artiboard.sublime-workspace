{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"no",
				"north_annotations"
			],
			[
				"_",
				"_it_b"
			],
			[
				"_i",
				"_it_e"
			],
			[
				"con",
				"const_iterator"
			],
			[
				"r",
				"rhs"
			],
			[
				"I",
				"Iterator"
			],
			[
				"an",
				"annotations_per_side"
			],
			[
				"sou",
				"south_annotations"
			],
			[
				"fi",
				"firstA"
			],
			[
				"e",
				"elemT"
			],
			[
				"attr",
				"attribT"
			],
			[
				"cou",
				"count"
			],
			[
				"last",
				"lastE"
			],
			[
				"cl",
				"class_of"
			],
			[
				"b",
				"boardItT"
			],
			[
				"value",
				"valueT"
			],
			[
				"aI",
				"aIt"
			],
			[
				"val",
				"valueT"
			],
			[
				"a",
				"attribT"
			],
			[
				"att",
				"attribT"
			],
			[
				"at",
				"attribItT"
			],
			[
				"ele",
				"elemItT"
			],
			[
				"eml",
				"elemItT"
			],
			[
				"Id3",
				"Id3Attribute"
			],
			[
				"Id",
				"Id3ExampleSet"
			],
			[
				"Id3E",
				"Id3ExampleSet"
			],
			[
				"Id3A",
				"Id3AttribSet"
			],
			[
				"c",
				"c_str"
			],
			[
				"for",
				"for_each"
			],
			[
				"connec",
				"Connect4"
			],
			[
				"Data",
				"DataStat"
			],
			[
				"num",
				"num_ranks"
			],
			[
				"bo",
				"board"
			],
			[
				"w",
				"winningPiece"
			],
			[
				"n",
				"north"
			],
			[
				"all",
				"all_regions"
			],
			[
				"re",
				"repeating"
			],
			[
				"in",
				"inc_r"
			],
			[
				"ic",
				"inc	#include \"â€¦\""
			],
			[
				"or",
				"ordinal_t"
			],
			[
				"ro",
				"rowIndex"
			],
			[
				"col",
				"colIndex"
			],
			[
				"_r",
				"_region"
			],
			[
				"inde",
				"index_t"
			],
			[
				"name",
				"namespace"
			],
			[
				"F",
				"FeatureFunction"
			],
			[
				"o",
				"ostream"
			],
			[
				"Fe",
				"FeatureFunction"
			],
			[
				"_f",
				"_functionMap"
			],
			[
				"se",
				"second"
			],
			[
				"va",
				"valueT"
			],
			[
				"str",
				"string"
			],
			[
				"form",
				"formula_name"
			],
			[
				"Exp",
				"FeatureExpression"
			],
			[
				"Ex",
				"FeatureExpression"
			],
			[
				"has",
				"has_name"
			],
			[
				"ART",
				"ARTI_TEST"
			],
			[
				"ARTI",
				"ARTI_TEST"
			],
			[
				"ha",
				"hasErrors"
			],
			[
				"st",
				"string"
			],
			[
				"si",
				"size_t"
			],
			[
				"par",
				"parseTree"
			],
			[
				"to",
				"toStringTree"
			],
			[
				"ex",
				"exception"
			],
			[
				"ar",
				"artilib"
			],
			[
				"Ma",
				"MatchOutcome"
			],
			[
				"Main",
				"MainPage"
			],
			[
				"main",
				"main_page"
			],
			[
				"pro",
				"project_query_item"
			]
		]
	},
	"buffers":
	[
		{
			"file": "artilib/id3.h",
			"settings":
			{
				"buffer_size": 1312,
				"line_ending": "Windows"
			}
		},
		{
			"file": "artilib/id3.cpp",
			"settings":
			{
				"buffer_size": 17,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#include <experiment.h>\n#include <feat.h>\n#include <id3.h>\n#include \"connect4.h\"\n#include \"icu_data.h\"\nusing namespace arti;\n\nclass FairnessExperiment: public Experiment {\n	public:\n		FairnessExperiment() : Experiment(\"c4-010\",\"Connect-4 fairness\") {}\n	protected:\n		void doRun() override{\n			file() << \"sampleSize south north\";\n			Connect4 spec;\n			PickFirst picker;\n			int south = 0;\n			int north = 0;\n			int draw = 0;\n			int runs = 0;\n			while (runs < 10000) {\n				runs++;\n				Match match(spec,picker);\n				match.play();\n				auto result = match.outcome();\n				if (result == SouthPlayerWins)\n					south++;\n				else if (result == NorthPlayerWins)\n					north++;\n				else \n					draw++;\n				if (runs % 1000 == 0) \n					file() << runs << \" \" << (north * 100) / runs  << \" \" << (south * 100) / runs;\n			}\n		}\n};\n\nstruct DataStat {\n	DataStat() : wins(0), losses(0), draws(0) {};\n	void inc(const IcuEntry& e) {\n			if (e.outcome == NorthPlayerWins)\n				wins++;\n			else if (e.outcome == SouthPlayerWins)\n				losses++;\n			else\n				draws++;		\n	}\n\n	int wins;\n	int losses;\n	int draws;\n};\n\nstd::ostream& operator << (std::ostream& os, const DataStat& s) {\n	os << \" \" << s.wins << \" \" << s.losses << \" \" << s.draws;\n	return os;\n} \n\nclass DataStatistics: public Experiment {\npublic:\n	DataStatistics(): Experiment(\"c4-020\",\"Connect-4 ICU data\") {}\n	void doRun() override {\n		file() << \"ply wins losses draws\";\n		const IcuData& data = IcuData::instance();\n		std::map<int,DataStat> stats;\n		FOR_EACH(p,data) {\n			int ply = ply_of(p->first);\n			stats[ply].inc(p->second);\n		}\n		FOR_EACH(s,stats)\n			file() << s->first << s->second;\n		file() << data.size();\n	}\n};\n\n\nclass FeatureStatistics: public Experiment {\npublic:\n	FeatureStatistics(): Experiment(\"c4-030\",\"Connect-4 ICU data features\") {}\n	void doRun() override {\n		const IcuData& data = IcuData::instance();\n		file() << \"region piece count wins losses draws\";\n		const std::vector<Piece> pieces({Piece('-'), Piece('o'), Piece('x')});\n		auto program = load_program(\"../connect4/data/regions.txt\");\n		FOR_EACH(nr,program->regions()) {\n			auto n = nr->first;\n			auto r = nr->second;\n			FOR_EACH(p,pieces) {\n				std::map<int,DataStat> counts;\n				FOR_EACH(b,data) \n					counts[b->first.count(r,*p)].inc(b->second);\n				FOR_EACH(c,counts)\n					file() << n << \" \" << *p << \" \" << c->first << \" \" << c->second;	\n			}\n		}\n	}\n};\n\ntypedef std::pair<arti::Board, IcuEntry> element_type;\ntypedef std::pair<arti::Region&,arti::Piece> attrib_type;\n\nclass Connect4Classifier : public Classifier<attrib_type, element_type, MatchOutcome, int> {\n	int value_of(const element_type& e, const attrib_type &a) override {\n			return e.first.count_repeats((a.first),a.second);\n	};\n\n  MatchOutcome class_of(const element_type &e) override {\n			return e.second.outcome;\n	};\n};\n\nclass FeatureCheck: public Experiment {\npublic:\n	FeatureCheck(): Experiment(\"c4-040\",\"Impoved Connect-4 ICU data features\") {}\n	void doRun() override {\n		const IcuData& data = IcuData::instance();\n		file() << \"region is_mixed\";\n		const std::vector<Piece> pieces({Piece('-'), Piece('o'), Piece('x')});\n		auto program = load_program(\"../connect4/data/regions.txt\");\n		Connect4Classifier cf;\n		FOR_EACH(nr,program->regions()) \n			FOR_EACH(p,pieces) {\n				attrib_type a(nr->second,*p);\n				file() << nr->first << \" \" << *p << \" \" << (cf.is_mixed(a,data.begin(),data.end())?\"yes\":\"no\"); \n			}\n	}\n};\n\nstruct AnnotatedData {\n	\n};\n\nclass AnnotatedFeatureCheck: public Experiment {\npublic:\n	AnnotatedFeatureCheck(): Experiment(\"c4-050\",\"AnnotatedFeatureCheck Connect-4 ICU data features\") {}\n	void doRun() override {\n		const IcuData& data = IcuData::instance();\n		file() << \"region is_mixed\";\n		const std::vector<Piece> pieces({Piece('-'), Piece('o'), Piece('x')});\n		auto program = load_program(\"../connect4/data/regions.txt\");\n		Connect4Classifier cf;\n		FOR_EACH(nr,program->regions()) \n			FOR_EACH(p,pieces) {\n				attrib_type a(nr->second,*p);\n				file() << nr->first << \" \" << *p << \" \" << (cf.is_mixed(a,data.begin(),data.end())?\"yes\":\"no\"); \n			}\n	}\n};\n\n\n// register experiments\nFairnessExperiment ex1;\nDataStatistics ex2;\nFeatureStatistics ex3;\nFeatureCheck ex4;",
			"file": "connect4/connect4_exp.cpp",
			"file_size": 4296,
			"file_write_time": 130260368401842378,
			"settings":
			{
				"buffer_size": 4144,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/c/mingw/lib/gcc/mingw32/4.7.2/include/c++/cstdio",
			"settings":
			{
				"buffer_size": 4347,
				"line_ending": "Unix"
			}
		},
		{
			"file": "connect4/icu_data.h",
			"settings":
			{
				"buffer_size": 378,
				"line_ending": "Windows"
			}
		},
		{
			"file": "connect4/connect4.cpp",
			"settings":
			{
				"buffer_size": 3658,
				"line_ending": "Windows"
			}
		},
		{
			"file": "artilib/board.h",
			"settings":
			{
				"buffer_size": 6167,
				"line_ending": "Windows"
			}
		},
		{
			"file": "connect4/icu_data.cpp",
			"settings":
			{
				"buffer_size": 844,
				"line_ending": "Windows"
			}
		},
		{
			"file": "artilib/systemex.h",
			"settings":
			{
				"buffer_size": 2900,
				"line_ending": "Windows"
			}
		},
		{
			"file": "artilib/game.cpp",
			"settings":
			{
				"buffer_size": 2725,
				"line_ending": "Windows"
			}
		},
		{
			"file": "artilib/feat_program.cpp",
			"settings":
			{
				"buffer_size": 1402,
				"line_ending": "Windows"
			}
		},
		{
			"file": "artilib/board.cpp",
			"settings":
			{
				"buffer_size": 2216,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"command_palette":
	{
		"height": 45.0,
		"selected_items":
		[
			[
				"dbg",
				"SublimeGDB: Stop Debugging"
			],
			[
				"debug",
				"SublimeGDB: Start Debugging"
			],
			[
				"pac",
				"Package Control: Upgrade Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"task",
				"Tasks: New document"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remoe",
				"Package Control: Remove Package"
			],
			[
				"Tas",
				"Set Syntax: Task"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"taskw",
				"Taskwarrior: View Tasks"
			],
			[
				"todo",
				"Show TODOs: Project and open files"
			],
			[
				"pakrem",
				"Package Control: Remove Package"
			],
			[
				"packa:re",
				"Package Control: Remove Package"
			],
			[
				"packarem",
				"Package Control: Remove Package"
			],
			[
				"packr",
				"Package Control: Remove Package"
			],
			[
				"pakcre",
				"Package Control: Remove Package"
			],
			[
				"Package Control: int",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"m",
				"Set Syntax: Makefile"
			]
		],
		"width": 545.0
	},
	"console":
	{
		"height": 209.0,
		"history":
		[
			"make",
			"import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/development/github/artiboard/Artiboard/connect4/connect4.h",
		"/C/development/github/artiboard/Artiboard/artilib/board.cpp",
		"/C/development/github/artiboard/Artiboard/artilib/square.h",
		"/C/development/github/artiboard/Artiboard/connect4/icu_data.h",
		"/C/development/github/artiboard/Artiboard/connect4/connect4_main.cpp",
		"/C/development/github/artiboard/Artiboard/experiments/c4-040.txt",
		"/c/mingw/lib/gcc/mingw32/4.7.2/include/c++/bits/stl_pair.h",
		"/C/development/github/artiboard/Artiboard/connect4/connect4_test.cpp",
		"/G/code/cuffserver/test/com/vastech/cuff/workflow/WorkflowManagerTests.java",
		"/C/development/github/artiboard/Artiboard/artilib/board.h",
		"/c/development/github/artiboard/artiboard/artilib/feat.cpp",
		"/C/development/github/artiboard/Artiboard/connect4/connect4_exp.cpp",
		"/C/development/github/artiboard/Artiboard/artiboard.sublime-project",
		"/C/development/github/artiboard/Artiboard/connect4/connect4.cpp",
		"/C/development/github/artiboard/Artiboard/connect4/icu_data.cpp",
		"/C/development/github/artiboard/Artiboard/experiments/c4-030.txt",
		"/C/development/github/artiboard/Artiboard/artilib/feat.h",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/Feat.g",
		"/C/development/github/artiboard/Artiboard/artilib/systemex.h",
		"/C/development/github/artiboard/Artiboard/artilib/systemex.cpp",
		"/C/development/github/artiboard/Artiboard/artilib/feat.cpp",
		"/C/development/github/artiboard/Artiboard/artilibtest/data/feat_language_test.txt",
		"/C/development/github/artiboard/Artiboard/artilib/game.h",
		"/C/development/github/artiboard/Artiboard/artilib/game.cpp",
		"/C/development/github/artiboard/Artiboard/tictactoe/tictactoe.h",
		"/C/development/github/artiboard/Artiboard/artilib/square.cpp",
		"/C/development/github/artiboard/Artiboard/artilib/experiment.h",
		"/C/development/github/artiboard/Artiboard/artilib/experiment.cpp",
		"/C/development/github/artiboard/Artiboard/RunDir/log.txt",
		"/C/development/github/artiboard/Artiboard/connect4/data/testfun.txt",
		"/C/development/github/artiboard/Artiboard/artilib/log.cpp",
		"/C/development/github/artiboard/Artiboard/artilib/log.h",
		"/C/development/github/artiboard/Artiboard/tutlib/test_util.h",
		"/0> connect4/connect4.cpp(83)",
		"/C/development/github/artiboard/Artiboard/makefile",
		"/C/development/github/artiboard/Artiboard/artilib/boardgame.cpp",
		"/C/development/github/artiboard/Artiboard/connect4/data/connect4.h",
		"/C/development/github/artiboard/Artiboard/tictactoe/tictactoe.cpp",
		"/C/development/github/artiboard/Artiboard/tictactoe/tictactoe_test.cpp",
		"/C/development/github/artiboard/Artiboard/tictactoe/tictactoe_main.cpp",
		"/C/development/github/artiboard/Artiboard/tutlib/test_main.cpp",
		"/C/development/github/artiboard/Artiboard/checkers/checkers_board.cpp",
		"/C/development/github/artiboard/Artiboard/checkers/checkers_board.h",
		"/C/development/github/artiboard/Artiboard/src/checkers/testcheckers.cpp",
		"/C/development/github/artiboard/Artiboard/src/tictactoe/test_tictactoe.cpp",
		"/C/development/github/artiboard/Artiboard/checkers/checkers_main.cpp",
		"/C/development/github/artiboard/Artiboard/artilibtest/feat_tests.cpp",
		"/C/development/github/artiboard/Artiboard/artilib/feat_program.h",
		"/C/development/github/artiboard/Artiboard/src/game/game.h",
		"/C/development/github/artiboard/Artiboard/src/game/gamebase.cpp",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/FeatTree.g",
		"/C/development/github/artiboard/Artiboard/artilib/feat_program.cpp",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/FeatTree.c",
		"/c/mingw/lib/gcc/mingw32/4.7.2/include/c++/bits/stl_tree.h",
		"/C/development/github/artiboard/Artiboard/src/checkers/checkers.h",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/FeatTree.h",
		"/C/development/github/artiboard/Artiboard/artilibtest/arti_main.cpp",
		"/C/development/github/artiboard/Artiboard/tutlib/test_util.cpp",
		"/C/development/github/artiboard/Artiboard/src/systemex/test_util.h",
		"/C/development/github/artiboard/Artiboard/artilib/test_util.h",
		"/C/development/github/artiboard/Artiboard/artilib/test_util.cpp",
		"/C/development/github/artiboard/Artiboard/src/conventions.txt",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/FeatParser.h",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/FeatLexer.c",
		"/C/Users/willemd/Documents/GitHub/codespear.github.io/_drafts/cpp-map.md",
		"/C/development/github/artiboard/Artiboard/src/tictactoe/tictactoe.h",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/.gitignore",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/featurelangLexer.c",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/featurelangParser.h",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/featurelangLexer.h",
		"/C/Users/willemd/Downloads/Cpp-examples/Cpp/dynamic_scope/main.cpp",
		"/C/development/github/artiboard/Artiboard/antlr/antlr3filestream.inl",
		"/C/Users/willemd/Downloads/Cpp-examples/Cpp/dynamic_scope/T.g",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/featurelang.g",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/featurelangParser.cpp",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/featurelangParser.hpp",
		"/C/development/github/artiboard/Artiboard/antlr/antlr3defs.hpp",
		"/C/development/github/artiboard/Artiboard/antlr/antlr3commontree.inl",
		"/C/development/github/artiboard/Artiboard/antlr/antlr3commontreeadaptor.inl",
		"/C/development/github/artiboard/Artiboard/antlr/antlr3exception.inl",
		"/C/development/github/artiboard/Artiboard/antlr/antlr3traits.hpp",
		"/C/development/github/artiboard/Artiboard/.gitignore",
		"/C/development/github/artiboard/Artiboard/artilib/grammars/featurelangLexer.cpp",
		"/C/development/github/artiboard/Artiboard/line 35",
		"/C/development/github/artiboard/Artiboard/line 36",
		"/C/development/github/artiboard/Artiboard/connect4/data/connect-4.data",
		"/C/development/github/artiboard/Artiboard/artilib/boardgame.h",
		"/C/development/github/artiboard/Artiboard/connect4/readme.md",
		"/C/development/github/artiboard/artiboard/src/makefile",
		"/C/development/github/artiboard/Artiboard/connect4/.gitignore",
		"/C/development/github/artiboard/Artiboard/src/boardgame/boardgame.h",
		"/C/development/github/artiboard/Artiboard/src/console/main.cpp",
		"/C/development/github/artiboard/Artiboard/artilib/testsystem.cpp",
		"/C/Users/willemd/AppData/Roaming/Sublime Text 2/Packages/User/make.sublime-build",
		"/C/Users/willemd/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/src/game/game_math.h",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/src/game/game.cpp",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/src/duality/duality_main.cpp",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/src/game/game_objects.h",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/src/duality/main_scene.h",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/src/game/font.h",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/src/game/game.h",
		"/C/Users/willemd/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/willemd/AppData/Roaming/Sublime Text 2/Packages/PlainTasks/messages/Tutorial.todo",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/src/my_tasks.todo",
		"/C/Users/willemd/Documents/GitHub/GameEx/.gitignore",
		"/C/Users/willemd/Documents/GitHub/GameEx/gameex.sublime-project",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/src/duality/controller.cpp",
		"/C/Users/willemd/AppData/Roaming/Sublime Text 2/Packages/SideBarEnhancements/messages/11.13.2012.1305.0.txt",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/src/todo.txt",
		"/C/Users/willemd/Documents/GitHub/GameEx/.metadata/.plugins/org.eclipse.core.resources/.projects/GameLand/org.eclipse.egit.core/GitProjectData.properties",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/media/duality/fence.frag",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/media/duality/arena.frag",
		"/C/Users/willemd/Documents/GitHub/GameEx/GameLand/src/duality/main_scene.cpp",
		"/G/.gitattributes",
		"/C/development/gui/code/badgerui/badger_model/com/vastech/localdb/project_004.sql",
		"/C/development/gui/code/badgerui/badger_model/com/vastech/localdb/project_003.sql",
		"/C/scratch/page006.xml",
		"/C/development/ngmc/trunk/src-redist-full/Redistributables/OCR_Verus/Verus/crs-api-sample.cpp",
		"/C/development/ngmc/trunk/src-redist-full/Redistributables/OCR_Verus/Verus/crs-api-sample-zone.cpp",
		"/C/development/ngmc/trunk/src/MediaServer/.project",
		"/C/development/ngmc/trunk/src/MediaServer/.classpath",
		"/C/development/ngmc/trunk/src/MediaServer/build.xml",
		"/C/development/ngmc/trunk/src/TextSearch/.classpath",
		"/C/development/github/Racer/TorcsRCS/torcs/WrapperBaseDriver.h",
		"/C/Users/willemd/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
		"/C/development/boogaloo/build.xml",
		"/C/development/boogaloo/src/boogaloo/Background.scala"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"AnnoFeatureCheck",
			"for_each",
			"char",
			"for_each",
			"FOR_EACH",
			"sp",
			"p",
			"r",
			"b",
			"arti::Region",
			"attribItT",
			") ",
			" \n",
			"is_mixed",
			"=",
			"+",
			"stats[ply]",
			"p->second",
			"systemex",
			"files",
			"all_regions",
			"b",
			"void",
			"all_regions",
			"0",
			");\n",
			"toe",
			"1",
			"9",
			"c",
			"arti",
			"tictac",
			"$(CHECKERS): $(OBJS) $(ARTI_LIB)\n	g++ $(wildcard checkers/*.o) -o $@ $(EXE_LIBS) $(LINK_ARGS)  \n\n",
			"checkers",
			"\"\n",
			"exe",
			"SquareSet",
			"assert",
			"state",
			"v",
			"v._formulaMap",
			"	ostream& operator <<(std::ostream& os, const FeatureFunction& v) {\n		return os;\n	}\n",
			"formula",
			"v._formulaMap",
			"v",
			"FeatureTerm_u_ptr",
			"FeatureProgram",
			".terms()",
			"FeatureExpression::u_ptr",
			"AndExpression",
			"name_o",
			" T",
			"T",
			"TESTDATA",
			"();\n",
			"state",
			"		void add(const string& name, const StateSet& value) {\n			if (has_state_name(name))\n				throw runtime_error_ex(\"State set with name '%s' has already been defined\", name.c_str());\n			_stateMap[name] = value;\n		}\n",
			"square_set",
			"_squareMap",
			"squareMap",
			"SquareSet",
			"a2",
			"tate",
			"	string FeatureProgram::name_of(const StateSet& states) {\n		for_each(I,_stateMap) {\n			if (I->second == states)\n				return I->first;\n		}\n		string new_name = create_name(_name_index++);\n		while (has_state_name(new_name))\n			new_name = create_name(_name_index++);\n		_stateMap[new_name] = states;\n		return new_name;\n	}\n\n",
			"exist",
			"\");",
			"std::string",
			"_state",
			"State",
			"std::string",
			"state",
			"identifier",
			"reference",
			"function fun1 = 1.23 * eq1 + 1.34 * eq2;",
			"artilib/grammars/Feat.g",
			"buld",
			"\\",
			"state",
			"Ctx",
			"USER1",
			"#include <grammars/FeatParser.h>\n",
			">\n",
			"FeatTreeLexer",
			"program",
			")\n",
			"Feat",
			".",
			"formula",
			"featurelang",
			"ExprCppTree",
			"{}\n",
			"GameLandLib",
			"TerrainDemo",
			"TERRAIN_DEMO",
			"exe",
			"GAME_LAND_LIB",
			"\\",
			")\n",
			"MainPage",
			"GameObject",
			"GameObjectChainLink",
			"ruler",
			"systemex",
			"DualityScene",
			"our",
			"L009",
			"L010",
			"lineID",
			"Steel Merchants",
			"dm )go"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"/"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "artilib/id3.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1312,
						"regions":
						{
						},
						"selection":
						[
							[
								590,
								590
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1020.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "artilib/id3.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								17
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "connect4/connect4_exp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4144,
						"regions":
						{
						},
						"selection":
						[
							[
								3403,
								3403
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4158.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/c/mingw/lib/gcc/mingw32/4.7.2/include/c++/cstdio",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4347,
						"regions":
						{
						},
						"selection":
						[
							[
								4192,
								4192
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5830.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "connect4/icu_data.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 378,
						"regions":
						{
						},
						"selection":
						[
							[
								375,
								375
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "connect4/connect4.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3658,
						"regions":
						{
						},
						"selection":
						[
							[
								3559,
								3564
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3858.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "artilib/board.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6167,
						"regions":
						{
						},
						"selection":
						[
							[
								4466,
								4466
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3800.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "connect4/icu_data.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 844,
						"regions":
						{
						},
						"selection":
						[
							[
								360,
								360
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 288.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "artilib/systemex.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2900,
						"regions":
						{
						},
						"selection":
						[
							[
								2843,
								2851
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3321.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "artilib/game.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2725,
						"regions":
						{
						},
						"selection":
						[
							[
								411,
								411
							],
							[
								979,
								979
							],
							[
								1688,
								1688
							],
							[
								2378,
								2378
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2770.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "artilib/feat_program.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1402,
						"regions":
						{
						},
						"selection":
						[
							[
								269,
								269
							],
							[
								314,
								314
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 118.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "artilib/board.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2216,
						"regions":
						{
						},
						"selection":
						[
							[
								336,
								336
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 322.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 33.0
	},
	"input":
	{
		"height": 49.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 362.0
	},
	"project": "artiboard.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"sys",
				"Arti Lib\\systemex.h"
			],
			[
				"sq",
				"Arti Lib\\square.h"
			],
			[
				"bo",
				"Arti Lib\\board.h"
			],
			[
				"ba",
				"Arti Lib\\board.h"
			],
			[
				"conn",
				"Connect 4\\connect4.cpp"
			],
			[
				"icu",
				"Connect 4\\icu_data.h"
			],
			[
				"ic",
				"Connect 4\\icu_data.h"
			],
			[
				"040",
				"Experiments\\c4-040.txt"
			],
			[
				"con_main",
				"Connect 4\\connect4_main.cpp"
			],
			[
				"id",
				"Arti Lib\\id3.h"
			],
			[
				"board",
				"Arti Lib\\board.h"
			],
			[
				"_exp",
				"Connect 4\\connect4_exp.cpp"
			],
			[
				"c4",
				"Experiments\\c4-030.txt"
			],
			[
				"0",
				"Experiments\\c4-030.txt"
			],
			[
				".g",
				"Arti Lib\\grammars\\Feat.g"
			],
			[
				"re",
				"Connect 4\\data\\regions.txt"
			],
			[
				"reg",
				"Connect 4\\data\\regions.txt"
			],
			[
				"syst",
				"Arti Lib\\systemex.h"
			],
			[
				"feat",
				"Arti Lib\\feat.cpp"
			],
			[
				"fepro",
				"Arti Lib\\feat_program.h"
			],
			[
				"fea",
				"Arti Lib\\feat.h"
			],
			[
				".txt",
				"Arti Lib Tests\\data\\feat_language_test.txt"
			],
			[
				"c4cpp",
				"Connect 4\\connect4.cpp"
			],
			[
				"cn4cp",
				"Connect 4\\connect4.cpp"
			],
			[
				"game",
				"Arti Lib\\game.h"
			],
			[
				"c4tes",
				"Connect 4\\connect4_test.cpp"
			],
			[
				"c4ex",
				"Connect 4\\connect4_exp.cpp"
			],
			[
				"cn4exp",
				"Connect 4\\connect4_exp.cpp"
			],
			[
				"log",
				"Arti Lib\\log.h"
			],
			[
				"lo",
				"Run\\log.txt"
			],
			[
				"squ",
				"Arti Lib\\square.h"
			],
			[
				"conncpp",
				"Connect 4\\connect4.cpp"
			],
			[
				"connec",
				"Connect 4\\connect4_test.cpp"
			],
			[
				"tes",
				"Tut Lib\\test_util.h"
			],
			[
				"ma",
				"Root\\makefile"
			],
			[
				"squa",
				"Arti Lib\\square.h"
			],
			[
				"make",
				"Root\\makefile"
			],
			[
				"boad",
				"Arti Lib\\board.h"
			],
			[
				"boa",
				"Arti Lib\\board.h"
			],
			[
				"test",
				"Tut Lib\\test_util.h"
			],
			[
				"system",
				"Arti Lib\\systemex.h"
			],
			[
				"featest",
				"Arti Lib Tests\\data\\feat_language_test.txt"
			],
			[
				"b",
				"Arti Lib\\board.h"
			],
			[
				"feap",
				"Arti Lib\\feat_program.h"
			],
			[
				"feat.g",
				"Arti Lib\\grammars\\FeatTree.g"
			],
			[
				"arttx",
				"Arti Lib Tests\\data\\feat_language_test.txt"
			],
			[
				"art",
				"Arti Lib Tests\\feat_tests.cpp"
			],
			[
				"feat.h",
				"Arti Lib\\feat.h"
			],
			[
				"arti_te",
				"Arti Lib Tests\\feat_tests.cpp"
			],
			[
				"arti",
				"Arti Lib Tests\\arti_main.cpp"
			],
			[
				"test_m",
				"Tut Lib\\test_main.cpp"
			],
			[
				"main",
				"Tut Lib\\test_main.cpp"
			],
			[
				"featrt",
				"Arti Lib\\grammars\\FeatTree.g"
			],
			[
				"feat_pro",
				"Arti Lib\\feat_program.h"
			],
			[
				"featp",
				"Arti Lib\\feat_program.h"
			],
			[
				"featree",
				"Arti Lib\\grammars\\FeatTree.g"
			],
			[
				"testut",
				"Tut Lib\\test_util.h"
			],
			[
				"test_utl",
				"Tut Lib\\test_util.cpp"
			],
			[
				"test_ut",
				"Old\\systemex\\test_util.h"
			],
			[
				"mak",
				"Root\\makefile"
			],
			[
				"txt",
				"Connect 4\\data\\testfun.txt"
			],
			[
				"parse",
				"Arti Lib\\grammars\\FeatParser.h"
			],
			[
				"tx",
				"Connect 4\\data\\testfun.txt"
			],
			[
				"gamec",
				"src/game/game.cpp"
			],
			[
				"gameh",
				"src/game/game.h"
			],
			[
				"font",
				"src/game/font.h"
			],
			[
				"gameob",
				"src/game/game_objects.h"
			],
			[
				"scene",
				"src/duality/main_scene.cpp"
			],
			[
				"dual",
				"src/duality/duality_main.cpp"
			],
			[
				"gamecpp",
				"src/game/game.cpp"
			],
			[
				"game.h",
				"src/game/game.h"
			],
			[
				"gamh",
				"src/game/game.h"
			],
			[
				"dualityscene",
				"src/duality/main_scene.h"
			],
			[
				"dualcontroll",
				"src/duality/controller.cpp"
			],
			[
				"mainph",
				"src/duality/mainpage.h"
			],
			[
				"dual/page",
				"src/duality/mainpage.cpp"
			],
			[
				"git",
				"GameEx/.metadata/.plugins/org.eclipse.core.resources/.projects/GameLand/org.eclipse.egit.core/GitProjectData.properties"
			],
			[
				"",
				"duality/controller.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"selected_items":
		[
			[
				"",
				"G:\\my_sublime.sublime-project"
			]
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 390.0,
		"selected_items":
		[
			[
				"TerrainO",
				"TerrainObject"
			],
			[
				"Terra",
				"TerrainObject"
			],
			[
				"",
				".PHONY:"
			],
			[
				"SsZ",
				"SshZebraConnection"
			],
			[
				"InstS",
				"InstallationSpecification"
			],
			[
				"Ssh",
				"SshZebraConnection"
			]
		],
		"width": 390.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 290.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
